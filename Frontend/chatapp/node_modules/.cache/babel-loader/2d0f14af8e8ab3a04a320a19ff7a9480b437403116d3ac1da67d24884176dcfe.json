{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp({\n  isSender\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [recipientNumber, setRecipientNumber] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n  const messageContainerRef = useRef(null);\n  useEffect(() => {\n    if (isSender) {\n      // Initialize sender-specific data\n      setSenderName(localStorage.getItem('senderName'));\n      setRecipientName(localStorage.getItem('recipientName'));\n      setRecipientNumber(localStorage.getItem('recipientNumber'));\n    } else {\n      // Initialize recipient-specific data\n      setSenderName(localStorage.getItem('recipientName'));\n      setRecipientName(localStorage.getItem('senderName'));\n      setRecipientNumber(localStorage.getItem('senderNumber'));\n    }\n\n    // Fetch messages for both sender and recipient\n    fetchMessages();\n    if (socket.connected) {\n      // Subscribe to WebSocket events\n      socket.on('newMessage', newMessage => {\n        setMessages([...messages, newMessage]);\n        if (isSender && newMessage.recipientNumber === recipientNumber) {\n          // Pop up message on recipient's phone for sender's messages\n          alert(`New message from ${newMessage.senderName}: ${newMessage.text}`);\n        }\n      });\n    }\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [socket, isSender, recipientNumber]);\n  useEffect(() => {\n    // Scroll to the bottom of the message container on new messages\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '' && recipientNumber.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          senderName,\n          recipientName,\n          recipientNumber\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        if (socket.connected) {\n          socket.emit('newMessage', response.data); // Send new message event via WebSocket\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleSeenMessage = messageId => {\n    setSeenMessage(messageId);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isSender) {\n      // Save sender's data in localStorage\n      localStorage.setItem('senderName', e.target.senderName.value);\n      localStorage.setItem('recipientName', e.target.recipientName.value);\n      localStorage.setItem('recipientNumber', e.target.recipientNumber.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ChatPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        ref: messageContainerRef,\n        children: messages && messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.id === seenMessage ? 'seen' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: msg.senderName === senderName ? 'sent' : 'received',\n            children: msg.senderName === senderName ? 'You: ' : `${msg.senderName}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), msg.senderName === senderName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick-mark\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 51\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSeenMessage(msg.id),\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), \" \"]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: isSender ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"senderName\",\n            defaultValue: localStorage.getItem('senderName'),\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"recipientName\",\n            defaultValue: localStorage.getItem('recipientName'),\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"recipientNumber\",\n            defaultValue: localStorage.getItem('recipientNumber'),\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: text,\n            onChange: e => setText(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            className: \"send-button\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Type a message...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"L/Q0RmlDibF30+UjLlqNjr9IMXY=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","socketIOClient","jsxDEV","_jsxDEV","url","socket","ChatApp","isSender","_s","messages","setMessages","text","setText","senderName","setSenderName","recipientName","setRecipientName","recipientNumber","setRecipientNumber","seenMessage","setSeenMessage","messageContainerRef","localStorage","getItem","fetchMessages","connected","on","newMessage","alert","off","current","scrollTop","scrollHeight","response","get","data","error","console","sendMessage","trim","post","emit","handleSeenMessage","messageId","handleSubmit","e","preventDefault","setItem","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","length","map","msg","id","onClick","onSubmit","type","name","defaultValue","hidden","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\n\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp({ isSender }) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [recipientNumber, setRecipientNumber] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n  const messageContainerRef = useRef(null);\n\n  useEffect(() => {\n    if (isSender) {\n      // Initialize sender-specific data\n      setSenderName(localStorage.getItem('senderName'));\n      setRecipientName(localStorage.getItem('recipientName'));\n      setRecipientNumber(localStorage.getItem('recipientNumber'));\n    } else {\n      // Initialize recipient-specific data\n      setSenderName(localStorage.getItem('recipientName'));\n      setRecipientName(localStorage.getItem('senderName'));\n      setRecipientNumber(localStorage.getItem('senderNumber'));\n    }\n\n    // Fetch messages for both sender and recipient\n    fetchMessages();\n\n    if (socket.connected) {\n      // Subscribe to WebSocket events\n      socket.on('newMessage', (newMessage) => {\n        setMessages([...messages, newMessage]);\n        if (isSender && newMessage.recipientNumber === recipientNumber) {\n          // Pop up message on recipient's phone for sender's messages\n          alert(`New message from ${newMessage.senderName}: ${newMessage.text}`);\n        }\n      });\n    }\n\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [socket, isSender, recipientNumber]);\n\n  useEffect(() => {\n    // Scroll to the bottom of the message container on new messages\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '' && recipientNumber.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          senderName,\n          recipientName,\n          recipientNumber,\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        if (socket.connected) {\n          socket.emit('newMessage', response.data); // Send new message event via WebSocket\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleSeenMessage = (messageId) => {\n    setSeenMessage(messageId);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isSender) {\n      // Save sender's data in localStorage\n      localStorage.setItem('senderName', e.target.senderName.value);\n      localStorage.setItem('recipientName', e.target.recipientName.value);\n      localStorage.setItem('recipientNumber', e.target.recipientNumber.value);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>ChatPro</h1>\n      </div>\n      <div className=\"chat-screen\">\n        <div className=\"message-container\" ref={messageContainerRef}>\n          {messages && messages.length > 0 ? (\n            messages.map((msg) => (\n              <div key={msg.id} className={`message ${msg.id === seenMessage ? 'seen' : ''}`}>\n                <span className={msg.senderName === senderName ? 'sent' : 'received'}>\n                  {msg.senderName === senderName ? 'You: ' : `${msg.senderName}: `}\n                </span>\n                <span>{msg.text}</span>\n                {msg.senderName === senderName && <span className=\"tick-mark\">&#10003;</span>} {/* Display tick mark for sent messages */}\n                <button onClick={() => handleSeenMessage(msg.id)}>✓</button> {/* Seen indicator */}\n              </div>\n            ))\n          ) : (\n            <p>No messages available</p>\n          )}\n        </div>\n        <div className=\"input-container\">\n          {isSender ? (\n            <form onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                name=\"senderName\"\n                defaultValue={localStorage.getItem('senderName')}\n                hidden\n              />\n              <input\n                type=\"text\"\n                name=\"recipientName\"\n                defaultValue={localStorage.getItem('recipientName')}\n                hidden\n              />\n              <input\n                type=\"text\"\n                name=\"recipientNumber\"\n                defaultValue={localStorage.getItem('recipientNumber')}\n                hidden\n              />\n              <input\n                type=\"text\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"Type a message...\"\n                className=\"message-input\"\n              />\n              <button onClick={sendMessage} className=\"send-button\">Send</button>\n            </form>\n          ) : (\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              placeholder=\"Type a message...\"\n              className=\"message-input\"\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}