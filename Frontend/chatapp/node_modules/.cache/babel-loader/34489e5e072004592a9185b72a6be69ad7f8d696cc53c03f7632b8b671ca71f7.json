{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n  useEffect(() => {\n    fetchMessages();\n\n    // Subscribe to WebSocket events\n    socket.on('newMessage', newMessage => {\n      setMessages([...messages, newMessage]);\n    });\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [messages]); // Subscribe to WebSocket events only when messages state changes\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          sender: senderName,\n          recipient: recipientName\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        socket.emit('newMessage', response.data); // Send new message event via WebSocket\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleSeenMessage = messageId => {\n    setSeenMessage(messageId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ChatPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: messages && messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.id === seenMessage ? 'seen' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: msg.sender === senderName ? 'sent' : 'received',\n          children: msg.sender === senderName ? 'You: ' : `${msg.sender === recipientName ? `${recipientName}: ` : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), msg.sender === senderName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tick-mark\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 45\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSeenMessage(msg.id),\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), \" \"]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"mktS1IdqKOn6hI2Bm6bpAY+79gs=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","socketIOClient","jsxDEV","_jsxDEV","url","socket","ChatApp","_s","messages","setMessages","text","setText","senderName","setSenderName","recipientName","setRecipientName","seenMessage","setSeenMessage","fetchMessages","on","newMessage","off","response","get","data","error","console","sendMessage","trim","post","sender","recipient","emit","handleSeenMessage","messageId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","msg","id","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\n\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp() {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n\n  useEffect(() => {\n    fetchMessages();\n\n    // Subscribe to WebSocket events\n    socket.on('newMessage', (newMessage) => {\n      setMessages([...messages, newMessage]);\n    });\n\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [messages]); // Subscribe to WebSocket events only when messages state changes\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          sender: senderName,\n          recipient: recipientName,\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        socket.emit('newMessage', response.data); // Send new message event via WebSocket\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleSeenMessage = (messageId) => {\n    setSeenMessage(messageId);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>ChatPro</h1>\n      </div>\n      <div className=\"message-container\">\n        {messages && messages.length > 0 ? (\n          messages.map((msg) => (\n            <div key={msg.id} className={`message ${msg.id === seenMessage ? 'seen' : ''}`}>\n              <span className={msg.sender === senderName ? 'sent' : 'received'}>\n                {msg.sender === senderName ? 'You: ' : `${msg.sender === recipientName ? `${recipientName}: ` : ''}`}\n              </span>\n              <span>{msg.text}</span>\n              {msg.sender === senderName && <span className=\"tick-mark\">&#10003;</span>} {/* Display tick mark for sent messages */}\n              <button onClick={() => handleSeenMessage(msg.id)}>âœ“</button> {/* Seen indicator */}\n            </div>\n          ))\n        ) : (\n          <p>No messages available</p>\n        )}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"message-input\"\n        />\n        <button onClick={sendMessage} className=\"send-button\">Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}