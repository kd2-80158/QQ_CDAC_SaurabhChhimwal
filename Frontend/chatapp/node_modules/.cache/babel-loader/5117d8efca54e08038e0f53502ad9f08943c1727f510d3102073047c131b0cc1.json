{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n  const messageContainerRef = useRef(null);\n  useEffect(() => {\n    if (senderName.trim() !== '' && recipientName.trim() !== '') {\n      // Fetch messages only when sender and recipient names are set\n      fetchMessages();\n    }\n    if (socket.connected) {\n      // Subscribe to WebSocket events\n      socket.on('newMessage', newMessage => {\n        setMessages([...messages, newMessage]);\n      });\n    }\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [socket, senderName, recipientName]); // Depend on socket, senderName, and recipientName for re-fetching messages\n\n  useEffect(() => {\n    // Scroll to the bottom of the message container on new messages\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      // Filter messages based on sender and recipient names\n      const filteredMessages = response.data.filter(msg => msg.sender === senderName && msg.recipient === recipientName);\n      setMessages(filteredMessages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          sender: senderName,\n          recipient: recipientName\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        if (socket.connected) {\n          socket.emit('newMessage', response.data); // Send new message event via WebSocket\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleSeenMessage = messageId => {\n    setSeenMessage(messageId);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Set sender and recipient names and clear the input fields\n    setSenderName(e.target.sender.value);\n    setRecipientName(e.target.recipient.value);\n    setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ChatPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), senderName.trim() !== '' && recipientName.trim() !== '' &&\n    /*#__PURE__*/\n    // Only render the chat if sender and recipient names are set\n    _jsxDEV(\"div\", {\n      className: \"chat-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        ref: messageContainerRef,\n        children: messages && messages.length > 0 ? messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.id === seenMessage ? 'seen' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: msg.sender === senderName ? 'sent' : 'received',\n            children: msg.sender === senderName ? 'You: ' : `${msg.sender === recipientName ? `${recipientName}: ` : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), msg.sender === senderName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick-mark\",\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 49\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSeenMessage(msg.id),\n            children: \"\\u2713\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), \" \"]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No messages available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Type a message...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), senderName.trim() === '' || recipientName.trim() === '' ?\n    /*#__PURE__*/\n    // Show form to enter sender and recipient names if not set\n    _jsxDEV(\"div\", {\n      className: \"input-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sender\",\n          children: \"Sender Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"sender\",\n          defaultValue: senderName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"recipient\",\n          children: \"Recipient Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"recipient\",\n          defaultValue: recipientName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"HY94r0BehRv6riufyoPTitiwrSI=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","socketIOClient","jsxDEV","_jsxDEV","url","socket","ChatApp","_s","messages","setMessages","text","setText","senderName","setSenderName","recipientName","setRecipientName","seenMessage","setSeenMessage","messageContainerRef","trim","fetchMessages","connected","on","newMessage","off","current","scrollTop","scrollHeight","response","get","filteredMessages","data","filter","msg","sender","recipient","error","console","sendMessage","post","emit","handleSeenMessage","messageId","handleSubmit","e","preventDefault","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","length","map","id","onClick","type","onChange","placeholder","onSubmit","htmlFor","defaultValue","required","_c","$RefreshReg$"],"sources":["/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\n\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp() {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [senderName, setSenderName] = useState('');\n  const [recipientName, setRecipientName] = useState('');\n  const [seenMessage, setSeenMessage] = useState(null);\n  const messageContainerRef = useRef(null);\n\n  useEffect(() => {\n    if (senderName.trim() !== '' && recipientName.trim() !== '') {\n      // Fetch messages only when sender and recipient names are set\n      fetchMessages();\n    }\n\n    if (socket.connected) {\n      // Subscribe to WebSocket events\n      socket.on('newMessage', (newMessage) => {\n        setMessages([...messages, newMessage]);\n      });\n    }\n\n    return () => {\n      // Clean up WebSocket subscription\n      socket.off('newMessage');\n    };\n  }, [socket, senderName, recipientName]); // Depend on socket, senderName, and recipientName for re-fetching messages\n\n  useEffect(() => {\n    // Scroll to the bottom of the message container on new messages\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      // Filter messages based on sender and recipient names\n      const filteredMessages = response.data.filter(\n        (msg) => msg.sender === senderName && msg.recipient === recipientName\n      );\n      setMessages(filteredMessages);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (text.trim() !== '' && senderName.trim() !== '' && recipientName.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          sender: senderName,\n          recipient: recipientName,\n        });\n        setMessages([...messages, response.data]); // Add the new message to the messages array\n        setText(''); // Clear the input box\n        if (socket.connected) {\n          socket.emit('newMessage', response.data); // Send new message event via WebSocket\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleSeenMessage = (messageId) => {\n    setSeenMessage(messageId);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Set sender and recipient names and clear the input fields\n    setSenderName(e.target.sender.value);\n    setRecipientName(e.target.recipient.value);\n    setText('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>ChatPro</h1>\n      </div>\n      {senderName.trim() !== '' && recipientName.trim() !== '' && ( // Only render the chat if sender and recipient names are set\n        <div className=\"chat-screen\">\n          <div className=\"message-container\" ref={messageContainerRef}>\n            {messages && messages.length > 0 ? (\n              messages.map((msg) => (\n                <div key={msg.id} className={`message ${msg.id === seenMessage ? 'seen' : ''}`}>\n                  <span className={msg.sender === senderName ? 'sent' : 'received'}>\n                    {msg.sender === senderName ? 'You: ' : `${msg.sender === recipientName ? `${recipientName}: ` : ''}`}\n                  </span>\n                  <span>{msg.text}</span>\n                  {msg.sender === senderName && <span className=\"tick-mark\">&#10003;</span>} {/* Display tick mark for sent messages */}\n                  <button onClick={() => handleSeenMessage(msg.id)}>✓</button> {/* Seen indicator */}\n                </div>\n              ))\n            ) : (\n              <p>No messages available</p>\n            )}\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              placeholder=\"Type a message...\"\n              className=\"message-input\"\n            />\n            <button onClick={sendMessage} className=\"send-button\">Send</button>\n          </div>\n        </div>\n      )}\n      {senderName.trim() === '' || recipientName.trim() === '' ? ( // Show form to enter sender and recipient names if not set\n        <div className=\"input-form\">\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"sender\">Sender Name:</label>\n            <input\n              type=\"text\"\n              id=\"sender\"\n              defaultValue={senderName}\n              required\n            />\n            <br></br>\n            <br></br>\n            <label htmlFor=\"recipient\">Recipient Name:</label>\n            <input\n              type=\"text\"\n              id=\"recipient\"\n              defaultValue={recipientName}\n              required\n            />\n            <br></br>\n            <button type=\"submit\">Start Chat</button>\n          </form>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,GAAG,GAAG,2BAA2B,CAAC,CAAC;AACzC,MAAMC,MAAM,GAAGJ,cAAc,CAACG,GAAG,CAAC,CAAC,CAAC;;AAEpC,SAASE,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMqB,mBAAmB,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3D;MACAC,aAAa,CAAC,CAAC;IACjB;IAEA,IAAIf,MAAM,CAACgB,SAAS,EAAE;MACpB;MACAhB,MAAM,CAACiB,EAAE,CAAC,YAAY,EAAGC,UAAU,IAAK;QACtCd,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEe,UAAU,CAAC,CAAC;MACxC,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX;MACAlB,MAAM,CAACmB,GAAG,CAAC,YAAY,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAACnB,MAAM,EAAEO,UAAU,EAAEE,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEzChB,SAAS,CAAC,MAAM;IACd;IACA,IAAIoB,mBAAmB,CAACO,OAAO,EAAE;MAC/BP,mBAAmB,CAACO,OAAO,CAACC,SAAS,GAAGR,mBAAmB,CAACO,OAAO,CAACE,YAAY;IAClF;EACF,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAEd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,GAAEzB,GAAI,WAAU,CAAC;MACnD;MACA,MAAM0B,gBAAgB,GAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAC1CC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAKtB,UAAU,IAAIqB,GAAG,CAACE,SAAS,KAAKrB,aAC1D,CAAC;MACDL,WAAW,CAACqB,gBAAgB,CAAC;IAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI5B,IAAI,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIP,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACjF,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAM5B,KAAK,CAACuC,IAAI,CAAE,GAAEnC,GAAI,WAAU,EAAE;UACnDM,IAAI;UACJwB,MAAM,EAAEtB,UAAU;UAClBuB,SAAS,EAAErB;QACb,CAAC,CAAC;QACFL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3CpB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACb,IAAIN,MAAM,CAACgB,SAAS,EAAE;UACpBhB,MAAM,CAACmC,IAAI,CAAC,YAAY,EAAEZ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAIC,SAAS,IAAK;IACvCzB,cAAc,CAACyB,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAhC,aAAa,CAAC+B,CAAC,CAACE,MAAM,CAACZ,MAAM,CAACa,KAAK,CAAC;IACpChC,gBAAgB,CAAC6B,CAAC,CAACE,MAAM,CAACX,SAAS,CAACY,KAAK,CAAC;IAC1CpC,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAK6C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9C,OAAA;MAAK6C,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B9C,OAAA;QAAA8C,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACLzC,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE;IAAA;IAAM;IAC5DhB,OAAA;MAAK6C,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9C,OAAA;QAAK6C,SAAS,EAAC,mBAAmB;QAACM,GAAG,EAAEpC,mBAAoB;QAAA+B,QAAA,EACzDzC,QAAQ,IAAIA,QAAQ,CAAC+C,MAAM,GAAG,CAAC,GAC9B/C,QAAQ,CAACgD,GAAG,CAAEvB,GAAG,iBACf9B,OAAA;UAAkB6C,SAAS,EAAG,WAAUf,GAAG,CAACwB,EAAE,KAAKzC,WAAW,GAAG,MAAM,GAAG,EAAG,EAAE;UAAAiC,QAAA,gBAC7E9C,OAAA;YAAM6C,SAAS,EAAEf,GAAG,CAACC,MAAM,KAAKtB,UAAU,GAAG,MAAM,GAAG,UAAW;YAAAqC,QAAA,EAC9DhB,GAAG,CAACC,MAAM,KAAKtB,UAAU,GAAG,OAAO,GAAI,GAAEqB,GAAG,CAACC,MAAM,KAAKpB,aAAa,GAAI,GAAEA,aAAc,IAAG,GAAG,EAAG;UAAC;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChG,CAAC,eACPlD,OAAA;YAAA8C,QAAA,EAAOhB,GAAG,CAACvB;UAAI;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACtBpB,GAAG,CAACC,MAAM,KAAKtB,UAAU,iBAAIT,OAAA;YAAM6C,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAAC,GAAC,eAC3ElD,OAAA;YAAQuD,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACR,GAAG,CAACwB,EAAE,CAAE;YAAAR,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC;QAAA,GANrDpB,GAAG,CAACwB,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOX,CACN,CAAC,gBAEFlD,OAAA;UAAA8C,QAAA,EAAG;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC5B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNlD,OAAA;QAAK6C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B9C,OAAA;UACEwD,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAErC,IAAK;UACZkD,QAAQ,EAAGhB,CAAC,IAAKjC,OAAO,CAACiC,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;UACzCc,WAAW,EAAC,mBAAmB;UAC/Bb,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFlD,OAAA;UAAQuD,OAAO,EAAEpB,WAAY;UAACU,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACAzC,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIL,aAAa,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE;IAAA;IAAK;IAC3DhB,OAAA;MAAK6C,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzB9C,OAAA;QAAM2D,QAAQ,EAAEnB,YAAa;QAAAM,QAAA,gBAC3B9C,OAAA;UAAO4D,OAAO,EAAC,QAAQ;UAAAd,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5ClD,OAAA;UACEwD,IAAI,EAAC,MAAM;UACXF,EAAE,EAAC,QAAQ;UACXO,YAAY,EAAEpD,UAAW;UACzBqD,QAAQ;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFlD,OAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAO4D,OAAO,EAAC,WAAW;UAAAd,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDlD,OAAA;UACEwD,IAAI,EAAC,MAAM;UACXF,EAAE,EAAC,WAAW;UACdO,YAAY,EAAElD,aAAc;UAC5BmD,QAAQ;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFlD,OAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlD,OAAA;UAAQwD,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,GACJ,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC9C,EAAA,CA3IQD,OAAO;AAAA4D,EAAA,GAAP5D,OAAO;AA6IhB,eAAeA,OAAO;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}