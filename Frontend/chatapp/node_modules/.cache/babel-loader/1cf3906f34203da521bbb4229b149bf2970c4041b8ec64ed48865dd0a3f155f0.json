{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp({\n  senderName,\n  recipientName\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const messageContainerRef = useRef(null);\n  useEffect(() => {\n    fetchMessages();\n    if (socket.connected) {\n      socket.on('newMessage', newMessage => {\n        setMessages([...messages, newMessage]);\n        if (newMessage.recipientName === senderName) {\n          // Change tick color for received messages\n          setMessages(prevMessages => prevMessages.map(msg => msg.id === newMessage.id ? {\n            ...msg,\n            received: true\n          } : msg));\n        }\n      });\n    }\n    return () => {\n      socket.off('newMessage');\n    };\n  }, [socket, messages, senderName]);\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (text.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          senderName,\n          recipientName,\n          received: false\n        });\n        setMessages([...messages, response.data]);\n        setText('');\n        if (socket.connected) {\n          socket.emit('newMessage', response.data);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  const handleSeenMessage = messageId => {\n    setMessages(prevMessages => prevMessages.map(msg => msg.id === messageId ? {\n      ...msg,\n      received: true\n    } : msg));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ChatPro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen\",\n      ref: messageContainerRef,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.senderName === senderName ? 'sent' : 'received'} ${msg.received ? 'received-tick' : ''}`,\n        onClick: () => handleSeenMessage(msg.id),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.senderName === senderName ? 'You: ' : `${msg.senderName}: `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"lX3TCu3VENPRFbCtxsvV0lRtju0=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","socketIOClient","jsxDEV","_jsxDEV","url","socket","ChatApp","senderName","recipientName","_s","messages","setMessages","text","setText","messageContainerRef","fetchMessages","connected","on","newMessage","prevMessages","map","msg","id","received","off","current","scrollTop","scrollHeight","response","get","data","error","console","sendMessage","trim","post","emit","handleSeenMessage","messageId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/saurabhchhimwal/Desktop/ChatApp/Frontend/chatapp/src/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nimport './ChatApp.css'; // Import CSS file for styling\n\nconst url = 'http://localhost:3001/api'; // Your backend API base URL\nconst socket = socketIOClient(url); // Initialize WebSocket client\n\nfunction ChatApp({ senderName, recipientName }) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const messageContainerRef = useRef(null);\n\n  useEffect(() => {\n    fetchMessages();\n\n    if (socket.connected) {\n      socket.on('newMessage', (newMessage) => {\n        setMessages([...messages, newMessage]);\n        if (newMessage.recipientName === senderName) {\n          // Change tick color for received messages\n          setMessages((prevMessages) =>\n            prevMessages.map((msg) =>\n              msg.id === newMessage.id ? { ...msg, received: true } : msg\n            )\n          );\n        }\n      });\n    }\n\n    return () => {\n      socket.off('newMessage');\n    };\n  }, [socket, messages, senderName]);\n\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`${url}/messages`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (text.trim() !== '') {\n      try {\n        const response = await axios.post(`${url}/messages`, {\n          text,\n          senderName,\n          recipientName,\n          received: false,\n        });\n        setMessages([...messages, response.data]);\n        setText('');\n        if (socket.connected) {\n          socket.emit('newMessage', response.data);\n        }\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n\n  const handleSeenMessage = (messageId) => {\n    setMessages((prevMessages) =>\n      prevMessages.map((msg) =>\n        msg.id === messageId ? { ...msg, received: true } : msg\n      )\n    );\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <h1>ChatPro</h1>\n      </div>\n      <div className=\"chat-screen\" ref={messageContainerRef}>\n        {messages.map((msg) => (\n          <div\n            key={msg.id}\n            className={`message ${msg.senderName === senderName ? 'sent' : 'received'} ${\n              msg.received ? 'received-tick' : ''\n            }`}\n            onClick={() => handleSeenMessage(msg.id)}\n          >\n            <span>{msg.senderName === senderName ? 'You: ' : `${msg.senderName}: `}</span>\n            <span>{msg.text}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"message-input\"\n        />\n        <button onClick={sendMessage} className=\"send-button\">\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}